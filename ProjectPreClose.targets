<!-- this file is imported right before the </Project> in a .csproj -->

<Project>

  <PropertyGroup Condition=" '$(OutputType)' == 'Exe' ">
    <OutputPath>$(OkExeOutputPath)</OutputPath>
    <PublishDir>$(OkExePublishDir)</PublishDir>

    <!-- single-file publish options -->
    <PublishSingleFile>false</PublishSingleFile> <!-- for now keep dll's separate so i can see how massively they contribute to the overall size -->
    <SelfContained>false</SelfContained>
    <RuntimeIdentifier>win-x64</RuntimeIdentifier>

    <!-- some experiments i did on okunity...

    sizes with single-file publish..

    * not self-contained = 0.3MB
    * not self-contained+AOT = 0.5MB
    * self-contained = 62MB
    * self-contained+trimmed = 11MB
    * self-contained+trimmed+AOT = 15MB

    # enable AOT - start experimenting with this if startup time becomes noticeable
    <PublishReadyToRun>true</PublishReadyToRun>
    # bundle .net core libraries and runtime to avoid OS dependency (makes EXE humongo)
    <SelfContained>true</SelfContained>
    # effectively required by SelfContained..still have humongo EXE but about 4-5x reduced size
    <PublishTrimmed>true</PublishTrimmed>

    -->

  </PropertyGroup>

  <!-- extensions -->

  <ItemGroup Condition=" $(OkFeatures.Contains('Core')) or $(OkFeatures.Contains('Docopt')) ">
    <ProjectReference Include="$(OkSrcRoot)Core\Core.csproj" />
    <Using Include="OkTools.Core" />
    <Using Include="OkTools.Core.StaticUtility" Static="true" />
  </ItemGroup>

  <ItemGroup Condition=" $(OkFeatures.Contains('NiceIO')) ">
    <ProjectReference Include="$(OkSrcRoot)NiceIO\NiceIO.csproj" />
    <Using Include="NiceIO" />
  </ItemGroup>

  <ItemGroup Condition=" $(OkFeatures.Contains('Docopt')) ">
    <PackageReference Include="docopt.net" />
    <Compile Include="$(OkSrcRoot)_Include\DocoptExtensions.cs">
      <Link>_Include\DocoptExtensions.cs</Link>
    </Compile>
  </ItemGroup>

</Project>
